chromosomes:
  - "chr1"
  - "chr2"
  - "chr3"
  - "chr4"
  - "chr5"
  - "chr6"
  - "chr7"
  - "chr8"
  - "chr9"
  - "chr10"
  - "chr11"
  - "chr12"
  - "chr13"
  - "chr14"
  - "chr15"
  - "chr16"
  - "chr17"
  - "chr18"
  - "chr19"
  - "chr20"
  - "chr21"
  - "chr22"
  - "chrX"
  - "chrY"

samples:
  - mGorGor1
  - mPanPan1
  - mPanTro3
  - mPonAbe1
  - mPonPyg2

# Specify container to run workflow if using singularity.
# Optional
container: "docker://logsdonlab/cenmap:latest"

concat_asm:
  input_dir: "data/assemblies"
  mem: 20GB

ident_cen_ctgs:
  threads_srf: 32
  mem_srf: 50GB
  threads_aln: 8
  mem_aln: 150GB
  bp_merge: 5000000
  bp_slop: 1000000
  reference: "/project/logsdon_shared/data/reference/T2T-CHM13v2.fasta"

# nucflag:
#   # input_hifi_reads_fofn_dir: "data/hifi"
#   input_hifi_reads_dir: "data/hifi"
#   reads_rgx: ".*\\.bam$"
#   config_nucflag: "config/nucflag.toml"
#   threads_aln: 24
#   processes_nucflag: 12
#   mem_nucflag: 50GB
#   mem_aln: 100GB
#   samtools_view_flag: 2308
#   # asat or live_asat
#   ignore_type: "asat"

repeatmasker:
  ref_repeatmasker_output: []
  repeat_colors: "config/repeatmasker_colors.json"
  bp_shannon_window: 5000
  threads: 12

humas_annot:
  mode: "sf"
  threads: 6
  mem: 30GB
  hmm_profile: "data/models/AS-SFs-hmmer3.0.290621.hmm.gz"

plot_hor_stv:
  ref_stv: []
  sat_annot_colors: "config/repeatmasker_sat_annot_colors.json"
  stv_annot_colors: "config/stv_annot_colors.tsv"

calculate_hor_length:
  ref_hor_lengths:
    - name: "CHM1"
      color: "red"
      path: "data/annotations/chm1_hor_length.tsv"
    - name: CHM13
      color: "black"
      path: "data/annotations/chm13_hor_length.tsv"

moddotplot:
  mem: 10GB
  ident_thr: 70.0
  window: 5000

# cdr_finder:
#   # Either minimap2 or winnowmap
#   # Use aligner_opts to override defaults.
#   aligner: minimap2
#   # aligner_opts: "-y -a --eqx --cs -x lr:hqae -I8g -s 4000" # minimap2
#   # aligner_opts: "-y -a --eqx --cs -x map-ont -I8g -s 4000" # winnowmap
#   # Expects sample subdir in input_dir.
#   # Uses find and file pattern to merge bam.
#   input_bam_dir: "data/ont"
#   bam_rgx: ".*\\.bam$"
#   aln_mem: 50GB
#   aln_threads: 24
#   window_size: 5000
#   alr_threshold: 100000
#   bp_alr_merge: 1000
#   bp_edge: 500_000
#   height_perc_valley_threshold: 0.34
#   prom_perc_valley_threshold: 0.3
#   extend_edges_std: -1
